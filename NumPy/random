#Example - 1 : Generate a random integer from 0 to 100
from numpy import random
x = random.randint(100)

#Example - 2 : Generate a random float from 0 to 1
x = random.rand()

#Example - 3 : Generate a 1-D array containing 5 random integers from 0 to 100
x=random.randint(100, size=(5))

#Example - 4 : Generate a 2-D array with 3 rows, each row containing 5 random integers from 0 to 100
x = random.randint(100, size=(3, 5))

#Example - 5 : Generate a 1-D array containing 5 random floats
x = random.rand(5)

#Example - 6 : Generate a 2-D array with 3 rows, each row containing 5 random numbers
x = random.rand(3, 5)

#Example - 7 : Generate a 2-D array that consists of the values in the array parameter (3, 5, 7, and 9)
x = random.choice([3, 5, 7, 9], size=(3, 5))

Output -->
[[5 9 7 5 9]
[3 7 7 9 7]
[3 7 9 9 5]]


Data Distribution is a list of all possible values, and how often each value occurs.

#Example - 8 : Return a 2-D array with 3 rows, each containing 5 values
x = random.choice([3, 5, 7, 9], p=[0.1, 0.3, 0.6, 0.0], size=(3, 5))
print(x)

Output -->
[[5 5 7 7 7]
[7 5 7 7 7]
[7 5 7 7 7]]

#Example - 9 : Randomly shuffle elements of following array. The shuffle() method makes changes to the original array.
arr = np.array([1, 2, 3, 4, 5])
random.shuffle(arr)
print(arr)

#Example - 10 : Generate a random permutation of elements of following array. The permutation() method returns a re-arranged array (and leaves the original array un-changed).
arr = np.array([1, 2, 3, 4, 5])
print(random.permutation(arr))

Seaborn module :
Distplot stands for distribution plot, it takes as input an array and plots a curve corresponding to the distribution of points in the array.

#Example - 11 : Plotting a Distplot
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot([0, 1, 2, 3, 4, 5])
plt.show()


#Example - 12 : Plotting a Distplot Without the Histogram
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot([0, 1, 2, 3, 4, 5], hist=False)
plt.show()

Use the random.normal() method to get a Normal Data Distribution.
It has three parameters:
loc - (Mean) where the peak of the bell exists.
scale - (Standard Deviation) how flat the graph distribution should be.
size - The shape of the returned array.

#Example - 13 : Generate a random normal distribution of size 2x3 with mean at 1 and standard deviation of 2
from numpy import random
x = random.normal(loc=1, scale=2, size=(2, 3))
print(x)


#Example - 14 : Visualization of Normal Distribution
from numpy import random
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.normal(size=1000), hist=False)
plt.show()

Discrete Distribution:The distribution is defined at separate set of events, e.g. a coin toss's result is discrete as it can be only head or tails whereas height of people is continuous as it can be 170, 170.1, 170.11 and so on.
Binomial Distribution is a Discrete Distribution.
It describes the outcome of binary scenarios, e.g. toss of a coin, it will either be head or tails.
It has three parameters:
n - number of trials.
p - probability of occurrence of each trial (e.g. for toss of a coin 0.5 each).
size - The shape of the returned array.

#Example - 15 : Visualization of Binomial Distribution
from numpy import random
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.binomial(n=10, p=0.5, size=1000), hist=True, kde=False)
plt.show()


Poisson Distribution is a Discrete Distribution.
It estimates how many times an event can happen in a specified time. e.g. If someone eats twice a day what is the probability he will eat thrice?
It has two parameters:
lam - rate or known number of occurrences e.g. 2 for above problem.
size - The shape of the returned array.

#Example - 16 : Visualization of Poisson Distribution
from numpy import random
import matplotlib.pyplot as plt
import seaborn as sns
sns.distplot(random.poisson(lam=2, size=1000), kde=False)
plt.show()


Uniform Distribution is used to describe probability where every event has equal chances of occuring.
E.g. Generation of random numbers.
It has three parameters:
a - lower bound - default 0 .0.
b - upper bound - default 1.0.
size - The shape of the returned array.

#Example - 17 :
from numpy import random
x = random.uniform(size=(2, 3))
print(x)

#Example - 18 :


#Example - 20 :